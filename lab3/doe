import java.awt.Color;
import java.awt.Graphics2D;

public class doe extends hobject {
  	double omediumspeed=2;
    double minsenseflock=35;
    double maxsenseflock=120;
        
    
    public doe(double x, double y, double r, Color mycolor, double alpha) throws Exception {
        m_x = x;
        m_y = y;
        m_r = r;
        senseradius=170;
        omaxspeed=3.2;  
        ominspeed=0.7;  
        omediumspeed=(omaxspeed+ominspeed)/2;
        m_color=mycolor;
        acceleration = new PVector(0,0);
        velocity = new PVector(0,0);
        position = new PVector(x,y);        
        maxspeed = 3.2;
        maxforce = 0.1;        
        minsenseflock=m_r*1;
        maxsenseflock=m_r*2;//senseradius-m_r*3;

        circledistance =1;
        circleradius=1;
        anglechangestep=15;
        angle =0;    
        d=75;
    }

   
            
    
    public void update(hlist game, double delta_t) {
    	hobject hun = game.getmindistance(this);
    	
      PVector target = new PVector(0, 0);
    	if (!boundaries(game.getWidth(), game.getHeight(), d+m_r/2, game.m_dx, game.m_dy ))
    	{ 	
    		if (hun == null)
    		{ 
    			maxspeed=omediumspeed; //looking for a flock
         		getrandomtarget(target);
        		seek(target);
//                System.out.println(" angle= "+angle+" rad "+target.x+" rad "+target.y);
    		}else
    		{   double d2= PVector.sub(this.position, hun.position).mag();	
    			if ( (hun instanceof wolf) ||(hun instanceof hunter) || (d2<minsenseflock) )
    			{ //running away
    				maxspeed=omaxspeed;
    				if (hun instanceof doe)
        				maxspeed=omediumspeed;
        			target.x=hun.getX();
    			    target.y=hun.getY();
        		    seek(target);
              	    acceleration.mult(-1);    			
    			}else
        			if (hun instanceof doe) 
        			{
        				if (d2<maxsenseflock) 
                 		  getrandomtarget(target);       	    	
        				else {
                			target.x=hun.getX();
                			target.y=hun.getY();
                		//	System.out.println("!! m_x= "+m_x+"  m_y= "+m_y+" m_r= "+m_r+" d= "+d2);
        				}
            			maxspeed=ominspeed;
                		seek(target);
        				
        			}
    		}    		    
    }
    velocity.add(acceleration);
    	velocity.limit(maxspeed);
    	position.add(velocity);
    	acceleration.mult(0);
    	m_x=position.x;
    	m_y=position.y;		    
    }
    
    // draw circle  
    public void draw(Graphics2D g) {
        Graphics2D gg = (Graphics2D) g.create();
        gg.setColor(m_color);
        gg.fillOval((int)(m_x-m_r/2), (int)(m_y-m_r/2), (int)m_r, (int)m_r);
//    	System.out.println("!! m_x= "+m_x+"  m_y= "+m_y+" m_r= "+m_r+"  ");
        gg.dispose();        
    }
   
    
}
